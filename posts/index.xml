<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>/posts/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Apr 2020 18:31:31 -0700</lastBuildDate>
    
	<atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pynq Troubles: PS7, Hello World, and the pain to get there</title>
      <link>/posts/pynq-troubles-ps7/</link>
      <pubDate>Tue, 07 Apr 2020 18:31:31 -0700</pubDate>
      
      <guid>/posts/pynq-troubles-ps7/</guid>
      <description>Recently I&amp;rsquo;ve started to do some work on my PYNQ-Z1 FPGA. It&amp;rsquo;s a small toy intended for enthusiasts, as well as researchers interested in FPGAs. It uses the unique Zynq chipset, adding 2 ARM cores along with a PL. To use it as an FPGA, there are really a few simple steps. First, grab the [PYNQ][ https://github.com/Xilinx/PYNQ ] git repo and find the board files. Then import them into vivado by manually copying them into the boards directory.</description>
    </item>
    
    <item>
      <title>Reflow Oven</title>
      <link>/posts/reflow-oven/</link>
      <pubDate>Fri, 07 Feb 2020 10:32:13 -0800</pubDate>
      
      <guid>/posts/reflow-oven/</guid>
      <description>I&amp;rsquo;ve always wanted to build my own reflow oven for my personal projects. I found an article on hackaday showing how someone can make their own diy oven. I took a look at the reflowduino github repo, and found that this entire project is open source with both hardware and software information laid out. Unfortunately, the person who created the project is no longer building boards. Luckily, I found his Oshpark page and was able to order a few PCBS and buy the necessary components on Mouser using the BOM provided.</description>
    </item>
    
    <item>
      <title>Chromebooks, Coreboot, Colemak, Search Key?</title>
      <link>/posts/chromebook-search/</link>
      <pubDate>Tue, 10 Dec 2019 10:53:51 -0800</pubDate>
      
      <guid>/posts/chromebook-search/</guid>
      <description>I recently purchased an Intel 660p in order to dual boot MacOS and Windows 10 on one of my laptops. Unfortunately, I assumed that both of my laptop&amp;rsquo;s m.2 nvme slots worked.
I was wrong.
I quickly bought a NVMe to USB-C/USB 3.0 enclosure on amazon. I decided that if I&amp;rsquo;m planning to use an enclosure, I might as well use the Chromebook Pixel 2015 I had lying around.
I first had to install coreboot on my chromebook to enable UEFI boot using MrChromebox&amp;rsquo;s coreboot installation.</description>
    </item>
    
    <item>
      <title>Hands, Colemak, Caps Lock, and MacOs</title>
      <link>/posts/colemak-and-caps-lock/</link>
      <pubDate>Thu, 05 Dec 2019 13:24:45 -0800</pubDate>
      
      <guid>/posts/colemak-and-caps-lock/</guid>
      <description>Recently I have experienced hand pain while typing. This pain can be attributed to excessively typing and practicing guitar. The standard procedures to alleviate the pain are:
 hand stretches finger exercises rest.  But I would rather be productive. Instead of resting my hands, I&amp;rsquo;ve been learning colemak, an alternate keyboard layout designed to minimize hand strain. One nice aspect about colemak is that it maps the caps lock key to backspace, minimizing key travel (more on this later).</description>
    </item>
    
    <item>
      <title>First Post</title>
      <link>/posts/first-post/</link>
      <pubDate>Wed, 27 Nov 2019 23:10:16 -0800</pubDate>
      
      <guid>/posts/first-post/</guid>
      <description>After two days, I&amp;rsquo;m finally able to talk to the world using the Hugo framework!
There are a few things I needed to read to get it up and running, including the hugo documentation. Setting up the domain was the hardest part. Because Ã¸ is non-ascii, I needed to convert my website to punycode and update the CNAME.
I also used a template made by HTML5 UP to get this up and running, which was also easy to customize.</description>
    </item>
    
  </channel>
</rss>